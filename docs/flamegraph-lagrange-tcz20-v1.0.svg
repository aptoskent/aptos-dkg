<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="805.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="62"><g><title>lagrange-9a731b2c84c9f7a0`criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 1.61%)</title><rect x="0.0000%" y="629" width="1.6129%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`clap::builder::command::App::new (1 samples, 1.61%)</title><rect x="0.0000%" y="613" width="1.6129%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`clap::builder::command::App::new::new_inner (1 samples, 1.61%)</title><rect x="0.0000%" y="597" width="1.6129%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;clap::mkeymap::MKeyMap as core::default::Default&gt;::default (1 samples, 1.61%)</title><rect x="0.0000%" y="581" width="1.6129%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.61%)</title><rect x="3.2258%" y="277" width="1.6129%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="3.4758%" y="287.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (2 samples, 3.23%)</title><rect x="4.8387%" y="277" width="3.2258%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="2"/><text x="5.0887%" y="287.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde_json::de::from_slice (6 samples, 9.68%)</title><rect x="1.6129%" y="453" width="9.6774%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="6"/><text x="1.8629%" y="463.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde_json::de::from_trait (6 samples, 9.68%)</title><rect x="1.6129%" y="437" width="9.6774%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="6"/><text x="1.8629%" y="447.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::cargo_target_directory::_::_&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize (6 samples, 9.68%)</title><rect x="1.6129%" y="421" width="9.6774%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="6"/><text x="1.8629%" y="431.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (6 samples, 9.68%)</title><rect x="1.6129%" y="405" width="9.6774%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="6"/><text x="1.8629%" y="415.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (6 samples, 9.68%)</title><rect x="1.6129%" y="389" width="9.6774%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="6"/><text x="1.8629%" y="399.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde::de::MapAccess::next_value (6 samples, 9.68%)</title><rect x="1.6129%" y="373" width="9.6774%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="6"/><text x="1.8629%" y="383.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6 samples, 9.68%)</title><rect x="1.6129%" y="357" width="9.6774%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="6"/><text x="1.8629%" y="367.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 9.68%)</title><rect x="1.6129%" y="341" width="9.6774%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="6"/><text x="1.8629%" y="351.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (6 samples, 9.68%)</title><rect x="1.6129%" y="325" width="9.6774%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="6"/><text x="1.8629%" y="335.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (6 samples, 9.68%)</title><rect x="1.6129%" y="309" width="9.6774%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="6"/><text x="1.8629%" y="319.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde_json::de::Deserializer&lt;R&gt;::ignore_value (6 samples, 9.68%)</title><rect x="1.6129%" y="293" width="9.6774%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="6"/><text x="1.8629%" y="303.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2 samples, 3.23%)</title><rect x="8.0645%" y="277" width="3.2258%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="2"/><text x="8.3145%" y="287.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`serde_json::de::Deserializer&lt;R&gt;::peek (2 samples, 3.23%)</title><rect x="8.0645%" y="261" width="3.2258%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="2"/><text x="8.3145%" y="271.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 1.61%)</title><rect x="9.6774%" y="245" width="1.6129%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="9.9274%" y="255.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sys::unix::pipe::read2 (1 samples, 1.61%)</title><rect x="11.2903%" y="437" width="1.6129%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="11.5403%" y="447.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sys::unix::pipe::read2::read (1 samples, 1.61%)</title><rect x="11.2903%" y="421" width="1.6129%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="11.5403%" y="431.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 1.61%)</title><rect x="11.2903%" y="405" width="1.6129%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="11.5403%" y="415.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;criterion::Criterion as core::default::Default&gt;::default (8 samples, 12.90%)</title><rect x="1.6129%" y="613" width="12.9032%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="8"/><text x="1.8629%" y="623.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;criterion::DEFAULT_OUTPUT_DIRECTORY as core::ops::deref::Deref&gt;::deref (8 samples, 12.90%)</title><rect x="1.6129%" y="597" width="12.9032%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="8"/><text x="1.8629%" y="607.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sync::once::Once::call_once (8 samples, 12.90%)</title><rect x="1.6129%" y="581" width="12.9032%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="8"/><text x="1.8629%" y="591.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sys_common::once::queue::Once::call (8 samples, 12.90%)</title><rect x="1.6129%" y="565" width="12.9032%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="8"/><text x="1.8629%" y="575.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sync::once::Once::call_once::_{{closure}} (8 samples, 12.90%)</title><rect x="1.6129%" y="549" width="12.9032%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="8"/><text x="1.8629%" y="559.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (8 samples, 12.90%)</title><rect x="1.6129%" y="533" width="12.9032%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="8"/><text x="1.8629%" y="543.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::ops::function::FnOnce::call_once (8 samples, 12.90%)</title><rect x="1.6129%" y="517" width="12.9032%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="8"/><text x="1.8629%" y="527.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::cargo_target_directory (8 samples, 12.90%)</title><rect x="1.6129%" y="501" width="12.9032%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="8"/><text x="1.8629%" y="511.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::option::Option&lt;T&gt;::or_else (8 samples, 12.90%)</title><rect x="1.6129%" y="485" width="12.9032%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="8"/><text x="1.8629%" y="495.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::cargo_target_directory::_{{closure}} (8 samples, 12.90%)</title><rect x="1.6129%" y="469" width="12.9032%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="8"/><text x="1.8629%" y="479.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::process::Command::output (2 samples, 3.23%)</title><rect x="11.2903%" y="453" width="3.2258%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="2"/><text x="11.5403%" y="463.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sys::unix::process::process_inner::_&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (1 samples, 1.61%)</title><rect x="12.9032%" y="437" width="1.6129%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="13.1532%" y="447.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (1 samples, 1.61%)</title><rect x="12.9032%" y="421" width="1.6129%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="13.1532%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 1.61%)</title><rect x="12.9032%" y="405" width="1.6129%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="13.1532%" y="415.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::Criterion&lt;M&gt;::configure_from_args (1 samples, 1.61%)</title><rect x="14.5161%" y="613" width="1.6129%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="1"/><text x="14.7661%" y="623.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`clap::builder::command::App::new (1 samples, 1.61%)</title><rect x="14.5161%" y="597" width="1.6129%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="1"/><text x="14.7661%" y="607.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`clap::builder::command::App::new::new_inner (1 samples, 1.61%)</title><rect x="14.5161%" y="581" width="1.6129%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="14.7661%" y="591.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;clap::builder::command::App as core::default::Default&gt;::default (1 samples, 1.61%)</title><rect x="14.5161%" y="565" width="1.6129%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="14.7661%" y="575.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 1.61%)</title><rect x="14.5161%" y="549" width="1.6129%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="14.7661%" y="559.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 1.61%)</title><rect x="14.5161%" y="533" width="1.6129%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="14.7661%" y="543.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 1.61%)</title><rect x="14.5161%" y="517" width="1.6129%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="14.7661%" y="527.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 1.61%)</title><rect x="14.5161%" y="501" width="1.6129%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="14.7661%" y="511.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 1.61%)</title><rect x="14.5161%" y="485" width="1.6129%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="14.7661%" y="495.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 1.61%)</title><rect x="14.5161%" y="469" width="1.6129%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="14.7661%" y="479.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::new (1 samples, 1.61%)</title><rect x="16.1290%" y="597" width="1.6129%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="16.3790%" y="607.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;I as ff::batch::BatchInvert&lt;F&gt;&gt;::batch_invert (1 samples, 1.61%)</title><rect x="17.7419%" y="245" width="1.6129%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="17.9919%" y="255.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 1.61%)</title><rect x="19.3548%" y="229" width="1.6129%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="1"/><text x="19.6048%" y="239.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 1.61%)</title><rect x="19.3548%" y="213" width="1.6129%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="1"/><text x="19.6048%" y="223.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (5 samples, 8.06%)</title><rect x="20.9677%" y="213" width="8.0645%" height="15" fill="rgb(250,213,24)" fg:x="13" fg:w="5"/><text x="21.2177%" y="223.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (4 samples, 6.45%)</title><rect x="22.5806%" y="197" width="6.4516%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="4"/><text x="22.8306%" y="207.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (4 samples, 6.45%)</title><rect x="22.5806%" y="181" width="6.4516%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="4"/><text x="22.8306%" y="191.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (1 samples, 1.61%)</title><rect x="29.0323%" y="213" width="1.6129%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="29.2823%" y="223.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="29.0323%" y="197" width="1.6129%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="1"/><text x="29.2823%" y="207.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 1.61%)</title><rect x="29.0323%" y="181" width="1.6129%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="1"/><text x="29.2823%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (8 samples, 12.90%)</title><rect x="19.3548%" y="245" width="12.9032%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="8"/><text x="19.6048%" y="255.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (7 samples, 11.29%)</title><rect x="20.9677%" y="229" width="11.2903%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="7"/><text x="21.2177%" y="239.50">lagrange-9a731b2c..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_add (1 samples, 1.61%)</title><rect x="30.6452%" y="213" width="1.6129%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="30.8952%" y="223.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::evaluation_domain::BatchEvaluationDomain::get_subdomain (1 samples, 1.61%)</title><rect x="32.2581%" y="165" width="1.6129%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="1"/><text x="32.5081%" y="175.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::evaluation_domain::BatchEvaluationDomain::is_order (1 samples, 1.61%)</title><rect x="32.2581%" y="149" width="1.6129%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="1"/><text x="32.5081%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (1 samples, 1.61%)</title><rect x="32.2581%" y="133" width="1.6129%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="1"/><text x="32.5081%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (1 samples, 1.61%)</title><rect x="32.2581%" y="117" width="1.6129%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="1"/><text x="32.5081%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (1 samples, 1.61%)</title><rect x="32.2581%" y="101" width="1.6129%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="1"/><text x="32.5081%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.61%)</title><rect x="33.8710%" y="101" width="1.6129%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="1"/><text x="34.1210%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (1 samples, 1.61%)</title><rect x="35.4839%" y="101" width="1.6129%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="35.7339%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (1 samples, 1.61%)</title><rect x="35.4839%" y="85" width="1.6129%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="35.7339%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::Add&gt;::add (1 samples, 1.61%)</title><rect x="35.4839%" y="69" width="1.6129%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="35.7339%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;&amp;blstrs::scalar::Scalar as core::ops::arith::Add&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::add (1 samples, 1.61%)</title><rect x="35.4839%" y="53" width="1.6129%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="35.7339%" y="63.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::AddAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::add_assign (1 samples, 1.61%)</title><rect x="35.4839%" y="37" width="1.6129%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="35.7339%" y="47.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (3 samples, 4.84%)</title><rect x="33.8710%" y="117" width="4.8387%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="3"/><text x="34.1210%" y="127.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_slow (1 samples, 1.61%)</title><rect x="37.0968%" y="101" width="1.6129%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="1"/><text x="37.3468%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_slow (1 samples, 1.61%)</title><rect x="37.0968%" y="85" width="1.6129%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="1"/><text x="37.3468%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.61%)</title><rect x="37.0968%" y="69" width="1.6129%" height="15" fill="rgb(233,84,52)" fg:x="23" fg:w="1"/><text x="37.3468%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 1.61%)</title><rect x="38.7097%" y="85" width="1.6129%" height="15" fill="rgb(207,117,47)" fg:x="24" fg:w="1"/><text x="38.9597%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (5 samples, 8.06%)</title><rect x="33.8710%" y="133" width="8.0645%" height="15" fill="rgb(249,43,39)" fg:x="21" fg:w="5"/><text x="34.1210%" y="143.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_slow (2 samples, 3.23%)</title><rect x="38.7097%" y="117" width="3.2258%" height="15" fill="rgb(209,38,44)" fg:x="24" fg:w="2"/><text x="38.9597%" y="127.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_slow (2 samples, 3.23%)</title><rect x="38.7097%" y="101" width="3.2258%" height="15" fill="rgb(236,212,23)" fg:x="24" fg:w="2"/><text x="38.9597%" y="111.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.61%)</title><rect x="40.3226%" y="85" width="1.6129%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="1"/><text x="40.5726%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (8 samples, 12.90%)</title><rect x="33.8710%" y="149" width="12.9032%" height="15" fill="rgb(211,96,35)" fg:x="21" fg:w="8"/><text x="34.1210%" y="159.50">lagrange-9a731b2c84..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_slow (3 samples, 4.84%)</title><rect x="41.9355%" y="133" width="4.8387%" height="15" fill="rgb(253,215,40)" fg:x="26" fg:w="3"/><text x="42.1855%" y="143.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_slow (3 samples, 4.84%)</title><rect x="41.9355%" y="117" width="4.8387%" height="15" fill="rgb(211,81,21)" fg:x="26" fg:w="3"/><text x="42.1855%" y="127.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (1 samples, 1.61%)</title><rect x="45.1613%" y="101" width="1.6129%" height="15" fill="rgb(208,190,38)" fg:x="28" fg:w="1"/><text x="45.4113%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (1 samples, 1.61%)</title><rect x="45.1613%" y="85" width="1.6129%" height="15" fill="rgb(235,213,38)" fg:x="28" fg:w="1"/><text x="45.4113%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (1 samples, 1.61%)</title><rect x="45.1613%" y="69" width="1.6129%" height="15" fill="rgb(237,122,38)" fg:x="28" fg:w="1"/><text x="45.4113%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (2 samples, 3.23%)</title><rect x="46.7742%" y="101" width="3.2258%" height="15" fill="rgb(244,218,35)" fg:x="29" fg:w="2"/><text x="47.0242%" y="111.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 3.23%)</title><rect x="46.7742%" y="85" width="3.2258%" height="15" fill="rgb(240,68,47)" fg:x="29" fg:w="2"/><text x="47.0242%" y="95.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::mem::replace (2 samples, 3.23%)</title><rect x="46.7742%" y="69" width="3.2258%" height="15" fill="rgb(210,16,53)" fg:x="29" fg:w="2"/><text x="47.0242%" y="79.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 1.61%)</title><rect x="50.0000%" y="85" width="1.6129%" height="15" fill="rgb(235,124,12)" fg:x="31" fg:w="1"/><text x="50.2500%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 3.23%)</title><rect x="50.0000%" y="101" width="3.2258%" height="15" fill="rgb(224,169,11)" fg:x="31" fg:w="2"/><text x="50.2500%" y="111.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1 samples, 1.61%)</title><rect x="51.6129%" y="85" width="1.6129%" height="15" fill="rgb(250,166,2)" fg:x="32" fg:w="1"/><text x="51.8629%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (13 samples, 20.97%)</title><rect x="33.8710%" y="165" width="20.9677%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="13"/><text x="34.1210%" y="175.50">lagrange-9a731b2c84c9f7a0`aptos_d..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (5 samples, 8.06%)</title><rect x="46.7742%" y="149" width="8.0645%" height="15" fill="rgb(230,116,27)" fg:x="29" fg:w="5"/><text x="47.0242%" y="159.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (5 samples, 8.06%)</title><rect x="46.7742%" y="133" width="8.0645%" height="15" fill="rgb(228,99,48)" fg:x="29" fg:w="5"/><text x="47.0242%" y="143.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (5 samples, 8.06%)</title><rect x="46.7742%" y="117" width="8.0645%" height="15" fill="rgb(253,11,6)" fg:x="29" fg:w="5"/><text x="47.0242%" y="127.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`ff::Field::pow_vartime (1 samples, 1.61%)</title><rect x="53.2258%" y="101" width="1.6129%" height="15" fill="rgb(247,143,39)" fg:x="33" fg:w="1"/><text x="53.4758%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as ff::Field&gt;::square (1 samples, 1.61%)</title><rect x="53.2258%" y="85" width="1.6129%" height="15" fill="rgb(236,97,10)" fg:x="33" fg:w="1"/><text x="53.4758%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blstrs::scalar::Scalar::square_assign (1 samples, 1.61%)</title><rect x="53.2258%" y="69" width="1.6129%" height="15" fill="rgb(233,208,19)" fg:x="33" fg:w="1"/><text x="53.4758%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (15 samples, 24.19%)</title><rect x="32.2581%" y="181" width="24.1935%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="15"/><text x="32.5081%" y="191.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::po..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (1 samples, 1.61%)</title><rect x="54.8387%" y="165" width="1.6129%" height="15" fill="rgb(220,129,5)" fg:x="34" fg:w="1"/><text x="55.0887%" y="175.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (1 samples, 1.61%)</title><rect x="54.8387%" y="149" width="1.6129%" height="15" fill="rgb(242,17,10)" fg:x="34" fg:w="1"/><text x="55.0887%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (1 samples, 1.61%)</title><rect x="54.8387%" y="133" width="1.6129%" height="15" fill="rgb(242,107,0)" fg:x="34" fg:w="1"/><text x="55.0887%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (1 samples, 1.61%)</title><rect x="54.8387%" y="117" width="1.6129%" height="15" fill="rgb(251,28,31)" fg:x="34" fg:w="1"/><text x="55.0887%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="54.8387%" y="101" width="1.6129%" height="15" fill="rgb(233,223,10)" fg:x="34" fg:w="1"/><text x="55.0887%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 1.61%)</title><rect x="54.8387%" y="85" width="1.6129%" height="15" fill="rgb(215,21,27)" fg:x="34" fg:w="1"/><text x="55.0887%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (1 samples, 1.61%)</title><rect x="56.4516%" y="133" width="1.6129%" height="15" fill="rgb(232,23,21)" fg:x="35" fg:w="1"/><text x="56.7016%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (1 samples, 1.61%)</title><rect x="56.4516%" y="117" width="1.6129%" height="15" fill="rgb(244,5,23)" fg:x="35" fg:w="1"/><text x="56.7016%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (1 samples, 1.61%)</title><rect x="56.4516%" y="101" width="1.6129%" height="15" fill="rgb(226,81,46)" fg:x="35" fg:w="1"/><text x="56.7016%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (2 samples, 3.23%)</title><rect x="56.4516%" y="165" width="3.2258%" height="15" fill="rgb(247,70,30)" fg:x="35" fg:w="2"/><text x="56.7016%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (2 samples, 3.23%)</title><rect x="56.4516%" y="149" width="3.2258%" height="15" fill="rgb(212,68,19)" fg:x="35" fg:w="2"/><text x="56.7016%" y="159.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (1 samples, 1.61%)</title><rect x="58.0645%" y="133" width="1.6129%" height="15" fill="rgb(240,187,13)" fg:x="36" fg:w="1"/><text x="58.3145%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="58.0645%" y="117" width="1.6129%" height="15" fill="rgb(223,113,26)" fg:x="36" fg:w="1"/><text x="58.3145%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::mem::replace (1 samples, 1.61%)</title><rect x="58.0645%" y="101" width="1.6129%" height="15" fill="rgb(206,192,2)" fg:x="36" fg:w="1"/><text x="58.3145%" y="111.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="59.6774%" y="133" width="1.6129%" height="15" fill="rgb(241,108,4)" fg:x="37" fg:w="1"/><text x="59.9274%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::mem::replace (1 samples, 1.61%)</title><rect x="59.6774%" y="117" width="1.6129%" height="15" fill="rgb(247,173,49)" fg:x="37" fg:w="1"/><text x="59.9274%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`_mul_by_1_mont_256 (1 samples, 1.61%)</title><rect x="61.2903%" y="69" width="1.6129%" height="15" fill="rgb(224,114,35)" fg:x="38" fg:w="1"/><text x="61.5403%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (20 samples, 32.26%)</title><rect x="32.2581%" y="197" width="32.2581%" height="15" fill="rgb(245,159,27)" fg:x="20" fg:w="20"/><text x="32.5081%" y="207.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::ac..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (5 samples, 8.06%)</title><rect x="56.4516%" y="181" width="8.0645%" height="15" fill="rgb(245,172,44)" fg:x="35" fg:w="5"/><text x="56.7016%" y="191.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::ifft_assign (3 samples, 4.84%)</title><rect x="59.6774%" y="165" width="4.8387%" height="15" fill="rgb(236,23,11)" fg:x="37" fg:w="3"/><text x="59.9274%" y="175.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (3 samples, 4.84%)</title><rect x="59.6774%" y="149" width="4.8387%" height="15" fill="rgb(205,117,38)" fg:x="37" fg:w="3"/><text x="59.9274%" y="159.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`ff::Field::pow_vartime (2 samples, 3.23%)</title><rect x="61.2903%" y="133" width="3.2258%" height="15" fill="rgb(237,72,25)" fg:x="38" fg:w="2"/><text x="61.5403%" y="143.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as ff::Field&gt;::square (2 samples, 3.23%)</title><rect x="61.2903%" y="117" width="3.2258%" height="15" fill="rgb(244,70,9)" fg:x="38" fg:w="2"/><text x="61.5403%" y="127.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blstrs::scalar::Scalar::square_assign (2 samples, 3.23%)</title><rect x="61.2903%" y="101" width="3.2258%" height="15" fill="rgb(217,125,39)" fg:x="38" fg:w="2"/><text x="61.5403%" y="111.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_sqr (2 samples, 3.23%)</title><rect x="61.2903%" y="85" width="3.2258%" height="15" fill="rgb(235,36,10)" fg:x="38" fg:w="2"/><text x="61.5403%" y="95.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`sqr_mont_sparse_256 (1 samples, 1.61%)</title><rect x="62.9032%" y="69" width="1.6129%" height="15" fill="rgb(251,123,47)" fg:x="39" fg:w="1"/><text x="63.1532%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (2 samples, 3.23%)</title><rect x="64.5161%" y="181" width="3.2258%" height="15" fill="rgb(221,13,13)" fg:x="40" fg:w="2"/><text x="64.7661%" y="191.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (2 samples, 3.23%)</title><rect x="64.5161%" y="165" width="3.2258%" height="15" fill="rgb(238,131,9)" fg:x="40" fg:w="2"/><text x="64.7661%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (1 samples, 1.61%)</title><rect x="66.1290%" y="149" width="1.6129%" height="15" fill="rgb(211,50,8)" fg:x="41" fg:w="1"/><text x="66.3790%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (1 samples, 1.61%)</title><rect x="66.1290%" y="133" width="1.6129%" height="15" fill="rgb(245,182,24)" fg:x="41" fg:w="1"/><text x="66.3790%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (1 samples, 1.61%)</title><rect x="66.1290%" y="117" width="1.6129%" height="15" fill="rgb(242,14,37)" fg:x="41" fg:w="1"/><text x="66.3790%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::SubAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::sub_assign (1 samples, 1.61%)</title><rect x="67.7419%" y="149" width="1.6129%" height="15" fill="rgb(246,228,12)" fg:x="42" fg:w="1"/><text x="67.9919%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`sub_mod_256 (1 samples, 1.61%)</title><rect x="67.7419%" y="133" width="1.6129%" height="15" fill="rgb(213,55,15)" fg:x="42" fg:w="1"/><text x="67.9919%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (24 samples, 38.71%)</title><rect x="32.2581%" y="213" width="38.7097%" height="15" fill="rgb(209,9,3)" fg:x="20" fg:w="24"/><text x="32.5081%" y="223.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_p..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (4 samples, 6.45%)</title><rect x="64.5161%" y="197" width="6.4516%" height="15" fill="rgb(230,59,30)" fg:x="40" fg:w="4"/><text x="64.7661%" y="207.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::ifft_assign (2 samples, 3.23%)</title><rect x="67.7419%" y="181" width="3.2258%" height="15" fill="rgb(209,121,21)" fg:x="42" fg:w="2"/><text x="67.9919%" y="191.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (2 samples, 3.23%)</title><rect x="67.7419%" y="165" width="3.2258%" height="15" fill="rgb(220,109,13)" fg:x="42" fg:w="2"/><text x="67.9919%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (1 samples, 1.61%)</title><rect x="69.3548%" y="149" width="1.6129%" height="15" fill="rgb(232,18,1)" fg:x="43" fg:w="1"/><text x="69.6048%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="69.3548%" y="133" width="1.6129%" height="15" fill="rgb(215,41,42)" fg:x="43" fg:w="1"/><text x="69.6048%" y="143.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1 samples, 1.61%)</title><rect x="69.3548%" y="117" width="1.6129%" height="15" fill="rgb(224,123,36)" fg:x="43" fg:w="1"/><text x="69.6048%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 1.61%)</title><rect x="70.9677%" y="197" width="1.6129%" height="15" fill="rgb(240,125,3)" fg:x="44" fg:w="1"/><text x="71.2177%" y="207.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 1.61%)</title><rect x="70.9677%" y="181" width="1.6129%" height="15" fill="rgb(205,98,50)" fg:x="44" fg:w="1"/><text x="71.2177%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (2 samples, 3.23%)</title><rect x="72.5806%" y="197" width="3.2258%" height="15" fill="rgb(205,185,37)" fg:x="45" fg:w="2"/><text x="72.8306%" y="207.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (2 samples, 3.23%)</title><rect x="72.5806%" y="181" width="3.2258%" height="15" fill="rgb(238,207,15)" fg:x="45" fg:w="2"/><text x="72.8306%" y="191.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (2 samples, 3.23%)</title><rect x="72.5806%" y="165" width="3.2258%" height="15" fill="rgb(213,199,42)" fg:x="45" fg:w="2"/><text x="72.8306%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (2 samples, 3.23%)</title><rect x="72.5806%" y="149" width="3.2258%" height="15" fill="rgb(235,201,11)" fg:x="45" fg:w="2"/><text x="72.8306%" y="159.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (2 samples, 3.23%)</title><rect x="72.5806%" y="133" width="3.2258%" height="15" fill="rgb(207,46,11)" fg:x="45" fg:w="2"/><text x="72.8306%" y="143.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (28 samples, 45.16%)</title><rect x="32.2581%" y="229" width="45.1613%" height="15" fill="rgb(241,35,35)" fg:x="20" fg:w="28"/><text x="32.5081%" y="239.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (4 samples, 6.45%)</title><rect x="70.9677%" y="213" width="6.4516%" height="15" fill="rgb(243,32,47)" fg:x="44" fg:w="4"/><text x="71.2177%" y="223.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 1.61%)</title><rect x="75.8065%" y="197" width="1.6129%" height="15" fill="rgb(247,202,23)" fg:x="47" fg:w="1"/><text x="76.0565%" y="207.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::mem::replace (1 samples, 1.61%)</title><rect x="75.8065%" y="181" width="1.6129%" height="15" fill="rgb(219,102,11)" fg:x="47" fg:w="1"/><text x="76.0565%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::AddAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::add_assign (1 samples, 1.61%)</title><rect x="77.4194%" y="181" width="1.6129%" height="15" fill="rgb(243,110,44)" fg:x="48" fg:w="1"/><text x="77.6694%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_add (1 samples, 1.61%)</title><rect x="77.4194%" y="165" width="1.6129%" height="15" fill="rgb(222,74,54)" fg:x="48" fg:w="1"/><text x="77.6694%" y="175.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::SubAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::sub_assign (1 samples, 1.61%)</title><rect x="79.0323%" y="181" width="1.6129%" height="15" fill="rgb(216,99,12)" fg:x="49" fg:w="1"/><text x="79.2823%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`sub_mod_256 (1 samples, 1.61%)</title><rect x="79.0323%" y="165" width="1.6129%" height="15" fill="rgb(226,22,26)" fg:x="49" fg:w="1"/><text x="79.2823%" y="175.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::fft_assign (4 samples, 6.45%)</title><rect x="77.4194%" y="213" width="6.4516%" height="15" fill="rgb(217,163,10)" fg:x="48" fg:w="4"/><text x="77.6694%" y="223.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (4 samples, 6.45%)</title><rect x="77.4194%" y="197" width="6.4516%" height="15" fill="rgb(213,25,53)" fg:x="48" fg:w="4"/><text x="77.6694%" y="207.50">lagrange..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign::bitreverse (2 samples, 3.23%)</title><rect x="80.6452%" y="181" width="3.2258%" height="15" fill="rgb(252,105,26)" fg:x="50" fg:w="2"/><text x="80.8952%" y="191.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 3.23%)</title><rect x="80.6452%" y="165" width="3.2258%" height="15" fill="rgb(220,39,43)" fg:x="50" fg:w="2"/><text x="80.8952%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 3.23%)</title><rect x="80.6452%" y="149" width="3.2258%" height="15" fill="rgb(229,68,48)" fg:x="50" fg:w="2"/><text x="80.8952%" y="159.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly (34 samples, 54.84%)</title><rect x="32.2581%" y="245" width="54.8387%" height="15" fill="rgb(252,8,32)" fg:x="20" fg:w="34"/><text x="32.5081%" y="255.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::accumulator_poly</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_mul_assign_fft_with_dom (6 samples, 9.68%)</title><rect x="77.4194%" y="229" width="9.6774%" height="15" fill="rgb(223,20,43)" fg:x="48" fg:w="6"/><text x="77.6694%" y="239.50">lagrange-9a731..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::ifft_assign (2 samples, 3.23%)</title><rect x="83.8710%" y="213" width="3.2258%" height="15" fill="rgb(229,81,49)" fg:x="52" fg:w="2"/><text x="84.1210%" y="223.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::fft::serial_fft_assign (2 samples, 3.23%)</title><rect x="83.8710%" y="197" width="3.2258%" height="15" fill="rgb(236,28,36)" fg:x="52" fg:w="2"/><text x="84.1210%" y="207.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::ops::arith::MulAssign&lt;&amp;blstrs::scalar::Scalar&gt;&gt;::mul_assign (1 samples, 1.61%)</title><rect x="85.4839%" y="181" width="1.6129%" height="15" fill="rgb(249,185,26)" fg:x="53" fg:w="1"/><text x="85.7339%" y="191.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`blst_fr_mul (1 samples, 1.61%)</title><rect x="85.4839%" y="165" width="1.6129%" height="15" fill="rgb(249,174,33)" fg:x="53" fg:w="1"/><text x="85.7339%" y="175.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`mul_mont_sparse_256 (1 samples, 1.61%)</title><rect x="85.4839%" y="149" width="1.6129%" height="15" fill="rgb(233,201,37)" fg:x="53" fg:w="1"/><text x="85.7339%" y="159.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::lagrange::lagrange_coefficients (45 samples, 72.58%)</title><rect x="17.7419%" y="261" width="72.5806%" height="15" fill="rgb(221,78,26)" fg:x="11" fg:w="45"/><text x="17.9919%" y="271.50">lagrange-9a731b2c84c9f7a0`aptos_dkg::lagrange::lagrange_coefficients</text></g><g><title>lagrange-9a731b2c84c9f7a0`aptos_dkg::polynomials::poly_differentiate (2 samples, 3.23%)</title><rect x="87.0968%" y="245" width="3.2258%" height="15" fill="rgb(250,127,30)" fg:x="54" fg:w="2"/><text x="87.3468%" y="255.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;blstrs::scalar::Scalar as core::convert::From&lt;u64&gt;&gt;::from (2 samples, 3.23%)</title><rect x="87.0968%" y="229" width="3.2258%" height="15" fill="rgb(230,49,44)" fg:x="54" fg:w="2"/><text x="87.3468%" y="239.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blstrs::scalar::Scalar::from_bytes_le (2 samples, 3.23%)</title><rect x="87.0968%" y="213" width="3.2258%" height="15" fill="rgb(229,67,23)" fg:x="54" fg:w="2"/><text x="87.3468%" y="223.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::ptr::drop_in_place&lt;blst::blst_scalar&gt; (2 samples, 3.23%)</title><rect x="87.0968%" y="197" width="3.2258%" height="15" fill="rgb(249,83,47)" fg:x="54" fg:w="2"/><text x="87.3468%" y="207.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst::_DERIVE_Drop_FOR_blst_scalar::_&lt;impl core::ops::drop::Drop for blst::blst_scalar&gt;::drop (2 samples, 3.23%)</title><rect x="87.0968%" y="181" width="3.2258%" height="15" fill="rgb(215,43,3)" fg:x="54" fg:w="2"/><text x="87.3468%" y="191.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`blst::_DERIVE_zeroize_Zeroize_FOR_blst_scalar::_&lt;impl zeroize::Zeroize for blst::blst_scalar&gt;::zeroize (2 samples, 3.23%)</title><rect x="87.0968%" y="165" width="3.2258%" height="15" fill="rgb(238,154,13)" fg:x="54" fg:w="2"/><text x="87.3468%" y="175.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;[Z (2 samples, 3.23%)</title><rect x="87.0968%" y="149" width="3.2258%" height="15" fill="rgb(219,56,2)" fg:x="54" fg:w="2"/><text x="87.3468%" y="159.50">lag..</text></g><g><title> 32] as zeroize::Zeroize&gt;::zeroize (2 samples, 3.23%)</title><rect x="87.0968%" y="133" width="3.2258%" height="15" fill="rgb(233,0,4)" fg:x="54" fg:w="2"/><text x="87.3468%" y="143.50"> 32..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (2 samples, 3.23%)</title><rect x="87.0968%" y="117" width="3.2258%" height="15" fill="rgb(235,30,7)" fg:x="54" fg:w="2"/><text x="87.3468%" y="127.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;Z as zeroize::Zeroize&gt;::zeroize (2 samples, 3.23%)</title><rect x="87.0968%" y="101" width="3.2258%" height="15" fill="rgb(250,79,13)" fg:x="54" fg:w="2"/><text x="87.3468%" y="111.50">lag..</text></g><g><title>lagrange-9a731b2c84c9f7a0`zeroize::atomic_fence (1 samples, 1.61%)</title><rect x="88.7097%" y="85" width="1.6129%" height="15" fill="rgb(211,146,34)" fg:x="55" fg:w="1"/><text x="88.9597%" y="95.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`core::sync::atomic::compiler_fence (1 samples, 1.61%)</title><rect x="88.7097%" y="69" width="1.6129%" height="15" fill="rgb(228,22,38)" fg:x="55" fg:w="1"/><text x="88.9597%" y="79.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 1.61%)</title><rect x="90.3226%" y="117" width="1.6129%" height="15" fill="rgb(235,168,5)" fg:x="56" fg:w="1"/><text x="90.5726%" y="127.50"></text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (3 samples, 4.84%)</title><rect x="91.9355%" y="117" width="4.8387%" height="15" fill="rgb(221,155,16)" fg:x="57" fg:w="3"/><text x="92.1855%" y="127.50">lagran..</text></g><g><title>lagrange-9a731b2c84c9f7a0`ppv_lite86::generic::dmap2 (2 samples, 3.23%)</title><rect x="93.5484%" y="101" width="3.2258%" height="15" fill="rgb(215,215,53)" fg:x="58" fg:w="2"/><text x="93.7984%" y="111.50">lag..</text></g><g><title>dyld`start (61 samples, 98.39%)</title><rect x="0.0000%" y="757" width="98.3871%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="61"/><text x="0.2500%" y="767.50">dyld`start</text></g><g><title>lagrange-9a731b2c84c9f7a0`main (61 samples, 98.39%)</title><rect x="0.0000%" y="741" width="98.3871%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="61"/><text x="0.2500%" y="751.50">lagrange-9a731b2c84c9f7a0`main</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::rt::lang_start (61 samples, 98.39%)</title><rect x="0.0000%" y="725" width="98.3871%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="61"/><text x="0.2500%" y="735.50">lagrange-9a731b2c84c9f7a0`std::rt::lang_start</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::rt::lang_start_internal (61 samples, 98.39%)</title><rect x="0.0000%" y="709" width="98.3871%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="61"/><text x="0.2500%" y="719.50">lagrange-9a731b2c84c9f7a0`std::rt::lang_start_internal</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::rt::lang_start::_{{closure}} (61 samples, 98.39%)</title><rect x="0.0000%" y="693" width="98.3871%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="61"/><text x="0.2500%" y="703.50">lagrange-9a731b2c84c9f7a0`std::rt::lang_start::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 98.39%)</title><rect x="0.0000%" y="677" width="98.3871%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="61"/><text x="0.2500%" y="687.50">lagrange-9a731b2c84c9f7a0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::ops::function::FnOnce::call_once (61 samples, 98.39%)</title><rect x="0.0000%" y="661" width="98.3871%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="61"/><text x="0.2500%" y="671.50">lagrange-9a731b2c84c9f7a0`core::ops::function::FnOnce::call_once</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::main (61 samples, 98.39%)</title><rect x="0.0000%" y="645" width="98.3871%" height="15" fill="rgb(233,25,53)" fg:x="0" fg:w="61"/><text x="0.2500%" y="655.50">lagrange-9a731b2c84c9f7a0`lagrange::main</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::benches (60 samples, 96.77%)</title><rect x="1.6129%" y="629" width="96.7742%" height="15" fill="rgb(210,40,34)" fg:x="1" fg:w="60"/><text x="1.8629%" y="639.50">lagrange-9a731b2c84c9f7a0`lagrange::benches</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::lagrange_group (51 samples, 82.26%)</title><rect x="16.1290%" y="613" width="82.2581%" height="15" fill="rgb(241,220,44)" fg:x="10" fg:w="51"/><text x="16.3790%" y="623.50">lagrange-9a731b2c84c9f7a0`lagrange::lagrange_group</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20 (50 samples, 80.65%)</title><rect x="17.7419%" y="597" width="80.6452%" height="15" fill="rgb(235,28,35)" fg:x="11" fg:w="50"/><text x="17.9919%" y="607.50">lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (50 samples, 80.65%)</title><rect x="17.7419%" y="581" width="80.6452%" height="15" fill="rgb(210,56,17)" fg:x="11" fg:w="50"/><text x="17.9919%" y="591.50">lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (50 samples, 80.65%)</title><rect x="17.7419%" y="565" width="80.6452%" height="15" fill="rgb(224,130,29)" fg:x="11" fg:w="50"/><text x="17.9919%" y="575.50">lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::routine::Routine::test (50 samples, 80.65%)</title><rect x="17.7419%" y="549" width="80.6452%" height="15" fill="rgb(235,212,8)" fg:x="11" fg:w="50"/><text x="17.9919%" y="559.50">lagrange-9a731b2c84c9f7a0`criterion::routine::Routine::test</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (50 samples, 80.65%)</title><rect x="17.7419%" y="533" width="80.6452%" height="15" fill="rgb(223,33,50)" fg:x="11" fg:w="50"/><text x="17.9919%" y="543.50">lagrange-9a731b2c84c9f7a0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::collect (50 samples, 80.65%)</title><rect x="17.7419%" y="517" width="80.6452%" height="15" fill="rgb(219,149,13)" fg:x="11" fg:w="50"/><text x="17.9919%" y="527.50">lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::collect</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (50 samples, 80.65%)</title><rect x="17.7419%" y="501" width="80.6452%" height="15" fill="rgb(250,156,29)" fg:x="11" fg:w="50"/><text x="17.9919%" y="511.50">lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 80.65%)</title><rect x="17.7419%" y="485" width="80.6452%" height="15" fill="rgb(216,193,19)" fg:x="11" fg:w="50"/><text x="17.9919%" y="495.50">lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (50 samples, 80.65%)</title><rect x="17.7419%" y="469" width="80.6452%" height="15" fill="rgb(216,135,14)" fg:x="11" fg:w="50"/><text x="17.9919%" y="479.50">lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (50 samples, 80.65%)</title><rect x="17.7419%" y="453" width="80.6452%" height="15" fill="rgb(241,47,5)" fg:x="11" fg:w="50"/><text x="17.9919%" y="463.50">lagrange-9a731b2c84c9f7a0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>lagrange-9a731b2c84c9f7a0`alloc::vec::Vec&lt;T,A&gt;::extend_trusted (50 samples, 80.65%)</title><rect x="17.7419%" y="437" width="80.6452%" height="15" fill="rgb(233,42,35)" fg:x="11" fg:w="50"/><text x="17.9919%" y="447.50">lagrange-9a731b2c84c9f7a0`alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::for_each (50 samples, 80.65%)</title><rect x="17.7419%" y="421" width="80.6452%" height="15" fill="rgb(231,13,6)" fg:x="11" fg:w="50"/><text x="17.9919%" y="431.50">lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::for_each</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 80.65%)</title><rect x="17.7419%" y="405" width="80.6452%" height="15" fill="rgb(207,181,40)" fg:x="11" fg:w="50"/><text x="17.9919%" y="415.50">lagrange-9a731b2c84c9f7a0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::fold (50 samples, 80.65%)</title><rect x="17.7419%" y="389" width="80.6452%" height="15" fill="rgb(254,173,49)" fg:x="11" fg:w="50"/><text x="17.9919%" y="399.50">lagrange-9a731b2c84c9f7a0`core::iter::traits::iterator::Iterator::fold</text></g><g><title>lagrange-9a731b2c84c9f7a0`core::iter::adapters::map::map_fold::_{{closure}} (50 samples, 80.65%)</title><rect x="17.7419%" y="373" width="80.6452%" height="15" fill="rgb(221,1,38)" fg:x="11" fg:w="50"/><text x="17.9919%" y="383.50">lagrange-9a731b2c84c9f7a0`core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (50 samples, 80.65%)</title><rect x="17.7419%" y="357" width="80.6452%" height="15" fill="rgb(206,124,46)" fg:x="11" fg:w="50"/><text x="17.9919%" y="367.50">lagrange-9a731b2c84c9f7a0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (50 samples, 80.65%)</title><rect x="17.7419%" y="341" width="80.6452%" height="15" fill="rgb(249,21,11)" fg:x="11" fg:w="50"/><text x="17.9919%" y="351.50">lagrange-9a731b2c84c9f7a0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20::_{{closure}} (50 samples, 80.65%)</title><rect x="17.7419%" y="325" width="80.6452%" height="15" fill="rgb(222,201,40)" fg:x="11" fg:w="50"/><text x="17.9919%" y="335.50">lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::bencher::Bencher&lt;M&gt;::iter_with_setup (50 samples, 80.65%)</title><rect x="17.7419%" y="309" width="80.6452%" height="15" fill="rgb(235,61,29)" fg:x="11" fg:w="50"/><text x="17.9919%" y="319.50">lagrange-9a731b2c84c9f7a0`criterion::bencher::Bencher&lt;M&gt;::iter_with_setup</text></g><g><title>lagrange-9a731b2c84c9f7a0`criterion::bencher::Bencher&lt;M&gt;::iter_batched (50 samples, 80.65%)</title><rect x="17.7419%" y="293" width="80.6452%" height="15" fill="rgb(219,207,3)" fg:x="11" fg:w="50"/><text x="17.9919%" y="303.50">lagrange-9a731b2c84c9f7a0`criterion::bencher::Bencher&lt;M&gt;::iter_batched</text></g><g><title>lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20::_{{closure}}::_{{closure}} (50 samples, 80.65%)</title><rect x="17.7419%" y="277" width="80.6452%" height="15" fill="rgb(222,56,46)" fg:x="11" fg:w="50"/><text x="17.9919%" y="287.50">lagrange-9a731b2c84c9f7a0`lagrange::lagrange_tcz20::_{{closure}}::_{{closure}}</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand::seq::IteratorRandom::choose_multiple (5 samples, 8.06%)</title><rect x="90.3226%" y="261" width="8.0645%" height="15" fill="rgb(239,76,54)" fg:x="56" fg:w="5"/><text x="90.5726%" y="271.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand::seq::gen_index (5 samples, 8.06%)</title><rect x="90.3226%" y="245" width="8.0645%" height="15" fill="rgb(231,124,27)" fg:x="56" fg:w="5"/><text x="90.5726%" y="255.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand::Rng::gen_range (5 samples, 8.06%)</title><rect x="90.3226%" y="229" width="8.0645%" height="15" fill="rgb(249,195,6)" fg:x="56" fg:w="5"/><text x="90.5726%" y="239.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (5 samples, 8.06%)</title><rect x="90.3226%" y="213" width="8.0645%" height="15" fill="rgb(237,174,47)" fg:x="56" fg:w="5"/><text x="90.5726%" y="223.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand::Rng::gen (5 samples, 8.06%)</title><rect x="90.3226%" y="197" width="8.0645%" height="15" fill="rgb(206,201,31)" fg:x="56" fg:w="5"/><text x="90.5726%" y="207.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand::distributions::integer::_&lt;impl rand::distributions::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (5 samples, 8.06%)</title><rect x="90.3226%" y="181" width="8.0645%" height="15" fill="rgb(231,57,52)" fg:x="56" fg:w="5"/><text x="90.5726%" y="191.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (5 samples, 8.06%)</title><rect x="90.3226%" y="165" width="8.0645%" height="15" fill="rgb(248,177,22)" fg:x="56" fg:w="5"/><text x="90.5726%" y="175.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (5 samples, 8.06%)</title><rect x="90.3226%" y="149" width="8.0645%" height="15" fill="rgb(215,211,37)" fg:x="56" fg:w="5"/><text x="90.5726%" y="159.50">lagrange-9a..</text></g><g><title>lagrange-9a731b2c84c9f7a0`&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (5 samples, 8.06%)</title><rect x="90.3226%" y="133" width="8.0645%" height="15" fill="rgb(241,128,51)" fg:x="56" fg:w="5"/><text x="90.5726%" y="143.50">lagrange-9a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.61%)</title><rect x="96.7742%" y="117" width="1.6129%" height="15" fill="rgb(227,165,31)" fg:x="60" fg:w="1"/><text x="97.0242%" y="127.50"></text></g><g><title>all (62 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(228,167,24)" fg:x="0" fg:w="62"/><text x="0.2500%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 1.61%)</title><rect x="98.3871%" y="757" width="1.6129%" height="15" fill="rgb(228,143,12)" fg:x="61" fg:w="1"/><text x="98.6371%" y="767.50"></text></g></svg></svg>